// Barfly File Format (Prototype)
//
// Barfly files can have comments that are marked in the traditional way
// used by  lots of languages but they are usually not necessary. Any lines
// beginning with double slashes will be ignored and (when relevant) passed
// through without modification. (We are considering allowing use of both //
// and #.)
//
// Barfly files can have a YAML header, but it does not have to have this.
// Header metadata TBD. YAML must be the first (non-comment) lines in a file.
// At least that is the plan, unless that turns out to be a weird choice!
//
// Section references have markdown ITALICS names followed by a colon. The
// preferred format is "*NAME*:" but we intend to allow the alternate form that
// markdown allows: "_NAME_:" as well. Note that if processed as markdown these
// format nicely.
//
// Cocktails begin with a NAME; the name is a string that follows the reference.
// It should appear on the same line, or be alone on the next line (preferred),
// but strictly we allow it to be any text following the reference. If you type
// a full paragraph, bad things will happen! Names should be reasonably short.
# Barfly Cocktail Spec(s)

*Name*:
Cocktail Name

// The INGREDIENTS section of the spec is a special format. It has to have
// **one** ingredient per line, and the amounts of each ingredient must be
// specified as a (decimal) number followed by a standard measurement unit.
// This is important for one of `barman`'s main functions which is to translate
// units of measurement in specs.

*Ingredients*:
1 oz. Spirit
1 oz. Aromatized Wine
0.5 oz. Simple Syrup
2 dashes Branded Bitters
Cherry for garnish

// A spec should have instructions written in a narrative format. These are
// generally untouched, but we are thinking of expanding the units conversion
// feature of `barman` to include changes in the narrative instructions as long
// as they have the form NUMBER followed by UNIT.

*Instructions*:
Instructions can begin on the same line as the "instructions" reference. (Note
that this holds for ingredients in the spec, too. But we prefer the style that
starts each section on the following line.) The instructions can be written as
completely free text. We intend, if it is not too hard, to scan this text and
look for pairs of NUMBERS and UNITS that could then be converted, like these:
Suppose you replace Spirt with New Spirit, then change the amount from 1 oz. to
1.5 oz., for instance.

// The references above:
//
//            + *Name*:
//            + *Ingredients*:
//            + *Instructions*:
//
// form a MIMIMAL cocktail spec. However, `barman` allows anything formatted in
// the same way as a reference, i.e. "*[TEXT]*:" to be used as a custom
// reference. `barman` will, if you specify, use these in similar ways for
// processing.
